// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MockGenerator - Integration Test given a decorated class Scenario:  mock decorator with absolute values then return the exact same values passed in the options of the mock decorator 1`] = `
Object {
  "binary": true,
  "date": Any<Date>,
  "name": "FooBar",
  "num": 1234,
  "objectLiteral": Object {
    "an": "object",
    "literal": true,
    "thiss": "is",
  },
}
`;

exports[`MockGenerator - Integration Test given a decorated class Scenario:  mock decorator with no/empty values then infer the decoratorValue from the type itself 1`] = `
Object {
  "binary": Any<Boolean>,
  "date": Any<Date>,
  "name": Any<String>,
  "num": Any<Number>,
}
`;

exports[`MockGenerator - Integration Test given a decorated class when using the mock decorator with absolute values then return the exact same values passed in the options of the mock decorator 1`] = `
Object {
  "binary": true,
  "date": Any<Date>,
  "name": "FooBar",
  "num": 1234,
  "objectLiteral": Object {
    "an": "object",
    "literal": true,
    "thiss": "is",
  },
}
`;

exports[`MockGenerator - Integration Test given a decorated class when using the mock decorator with absolute values when using the mock decorator with no/empty values then infer the decoratorValue from the type itself 1`] = `
Object {
  "binary": Any<Boolean>,
  "date": Any<Date>,
  "name": Any<String>,
  "num": Any<Number>,
}
`;

exports[`MockGenerator - Integration Test given a decorated class when using the mock decorator with no/empty values then infer the decoratorValue from the type itself 1`] = `
Object {
  "binary": Any<Boolean>,
  "date": Any<Date>,
  "name": Any<String>,
  "num": Any<Number>,
}
`;
