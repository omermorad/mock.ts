// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MockFactory e2e Test Scenario:  using a plain object when I create 3 dogs and covert them into a plain object then return a nested plain object 1`] = `
Array [
  Object {
    "name": "BirdyBird",
    "owner": Object {
      "car": Object {
        "model": "BMW",
      },
      "gender": "male",
    },
  },
  Object {
    "name": "BirdyBird",
    "owner": Object {
      "car": Object {
        "model": "BMW",
      },
      "gender": "male",
    },
  },
  Object {
    "name": "BirdyBird",
    "owner": Object {
      "car": Object {
        "model": "BMW",
      },
      "gender": "male",
    },
  },
]
`;

exports[`MockFactory e2e Test using mutations when I use mutation with the mock factory return a mock where the name is 'Mutated Name' 1`] = `
Bird {
  "name": "Mutated Name",
  "owner": Person {
    "car": Car {
      "model": "BMW",
    },
    "gender": "male",
  },
}
`;

exports[`MockFactory e2e Test when calling 'many' method with a given class then return 3 instances of the given class 1`] = `
Array [
  Bird {
    "name": "BirdyBird",
    "owner": Person {
      "car": Car {
        "model": "BMW",
      },
      "gender": "male",
    },
  },
  Bird {
    "name": "BirdyBird",
    "owner": Person {
      "car": Car {
        "model": "BMW",
      },
      "gender": "male",
    },
  },
  Bird {
    "name": "BirdyBird",
    "owner": Person {
      "car": Car {
        "model": "BMW",
      },
      "gender": "male",
    },
  },
]
`;
