name: Release
on:
  push:
    branches:
      - master
      - release
      - ci/refactor-ci-workflow

jobs:
  build-and-test:
    name: Build & Test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [ 12.x, 14.x, 16.x ]

    steps:
      - name: Checkout
        uses: actions/checkout@master
        with:
          ref: ${{ github.head_ref }}

      - name: Get Yarn Cache Directory Path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Use NodeJS ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Yarn Init
        id: yarn-cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Lint Commit Message
        run: |
          yarn add -D -W @commitlint/config-conventional
          echo $(git log -1 --pretty=format:"%s") | yarn commitlint

      - name: Lint Source
        run: yarn lint-staged

      - name: Build
        run: yarn build

      - name: Test
        run: yarn test:cov

      - name: Upload Report to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./coverage
          fail_ci_if_error: false
          files: ./coverage/cobertura-coverage.xml
          name: codecov-umbrella
          verbose: false

  release:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

    name: Release
#    needs: build-and-test
    steps:
      - name: Checkout
        uses: actions/checkout@master
        with:
          ref: ${{ github.head_ref }}

      - name: Configure Git
        run: |
          git config --global user.email "omer.moradd@gmail.com"
          git config --global user.name "$GITHUB_ACTOR"

      - name: Lerna Init
        run: lerna bootstrap

      - name: Build
        run: yarn build

      - name: Next Version
        run: lerna version --conventional-commits --conventional-prerelease --yes --preid alpha --no-push

      - name: Prerelease
        if: |
          contains(github.event.head_commit.message, '[release]') && github.head_ref == 'ci/refactor-ci-workflow'
        run: |
          echo github.head_ref
          echo contains(github.event.head_commit.message, '[release]')
          lerna version --conventional-commits --conventional-prerelease --yes --preid alpha --no-push

      - name: Release
        if: github.ref == 'refs/heads/master'
        run: |
          lerna version --conventional-commits --conventional-graduate --create-release github --yes
          lerna publish from-package --yes

